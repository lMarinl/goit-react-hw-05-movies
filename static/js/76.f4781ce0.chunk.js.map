{"version":3,"file":"static/js/76.f4781ce0.chunk.js","mappings":"4PACA,EAAgC,4BAAhC,EAAuE,uBAAvE,EAAyG,uBAAzG,EAA+I,2BAA/I,EAAsL,wBAAtL,EAAqN,mB,SC6CrN,EAvCa,WACX,IAAAA,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACZI,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEAC,EAAAA,EAAAA,IAAiBZ,GAAS,KAAD,EAAtCQ,EAAIC,EAAAI,KACVd,EAAQS,EAAKV,MAAMW,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEnBM,EAAAA,GAAAA,MAAY,SAAS,yBAAAN,EAAAO,OAAA,GAAAT,EAAA,kBAExB,kBAPmB,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAShBlB,GACFG,EAAeH,EAEnB,GAAG,CAACA,KAGFmB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAkBC,UAChCH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAaC,SACzBxB,EAAKyB,KAAI,SAAAzB,GAAI,OACZ0B,EAAAA,EAAAA,MAAA,MAAIJ,UAAWC,EAAaC,SAAA,EAC1BH,EAAAA,EAAAA,KAAA,OACEC,UAAWC,EACXI,KAAKC,EAAAA,EAAAA,IAAc5B,EAAK6B,cACxBC,IAAK9B,EAAK+B,KACVC,MAAO,OAETX,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAcC,SAAExB,EAAK+B,QACnCL,EAAAA,EAAAA,MAAA,KAAGJ,UAAWC,EAASC,SAAA,CAAC,cAAYxB,EAAKiC,eARTjC,EAAKkC,GASlC,OAKf,C","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__NIXqj\",\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\",\"actorProfile\":\"Cast_actorProfile__d5X10\",\"actorName\":\"Cast_actorName__XabVA\",\"role\":\"Cast_role__BLVYL\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getProfileImg, requestMovieCast } from '../../servises/API';\n\nimport { toast } from 'react-toastify';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const data = await requestMovieCast(movieId);\n        setCast(data.cast);\n      } catch {\n        toast.error('Error');\n      }\n    };\n\n    if (movieId) {\n      fetchMovieCast(movieId);\n    }\n  }, [movieId]);\n\n  return (\n    <div className={css.castContainer}>\n      <ul className={css.castList}>\n        {cast.map(cast => (\n          <li className={css.castItem} key={cast.id}>\n            <img\n              className={css.actorProfile}\n              src={getProfileImg(cast.profile_path)}\n              alt={cast.name}\n              width={150}\n            />\n            <p className={css.actorName}>{cast.name}</p>\n            <p className={css.role}>Character: {cast.character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["_useState","useState","_useState2","_slicedToArray","cast","setCast","movieId","useParams","useEffect","fetchMovieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","requestMovieCast","sent","t0","toast","stop","apply","arguments","_jsx","className","css","children","map","_jsxs","src","getProfileImg","profile_path","alt","name","width","character","id"],"sourceRoot":""}